library(dplyr)
processa_cand_tse <- function(df_tse) {
df_tse1 <- df_tse %>%
filter(DS_SITUACAO_CANDIDATURA != "INAPTO") %>%
filter(!grepl("SUPLENTE", DS_CARGO))
print(paste("o banco original tinha", nrow(df_tse),
"linhas e ficou com", nrow(df_tse1), "linhas"))
return(df_tse1)
}
setwd("C:\\Users\\jvoig\\OneDrive\\Documentos\\facebook_election_files\\Repositório de candidatos TSE\\1009")
arq <- list.files(pattern = "csv")
tse <- list()
for (i in seq_along(arq)){
x <- data.table::fread(arq[i])
tse[[i]] <- x
}
tse <- bind_rows(tse)
tse_filtrado <- processa_cand_tse(tse)
names(tse_filtrado)
tse_filtrado %>%
group_by(DS_SITUACAO_CANDIDATURA) %>%
summarise(cand = n())
save(tse_filtrado, file="tse_filtrado1009.Rdata")
gera_troca_uf <- function() {
uf <- "Acre, Alagoas, Amapá, Amazonas, Bahia, Ceará, Federal District, Espírito Santo, Goiás, Maranhão, Mato Grosso, Mato Grosso do Sul, Minas Gerais, Pará, Paraíba, Paraná, Pernambuco, Piauí, Rio de Janeiro, Rio Grande do Norte, Rio Grande do Sul, Rondônia, Roraima, Santa Catarina, São Paulo, Sergipe, Tocantins"
uf <- unlist(str_split(uf, ", "))
sigla <- c("AC", "AL", "AP", "AM", "BA", "CE","DF", "ES",
"GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR",
"PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC",
"SP", "SE", "TO")
df_uf <- data.frame(uf=uf, sigla=sigla, sigla_lower = tolower(sigla), stringsAsFactors = F)
}
corrige_uf_errada <- function(df_face) {
stopifnot(require(stringr))
stopifnot(require(dplyr))
df_uf <- gera_troca_uf()
# olhar sigla NA
face_valid <- df_face %>%
mutate(sigla = gsub("ed:", "", str_extract(df_face$ocd_id, "ed:.*"))) %>%
left_join(df_uf, by = c("sigla" = "sigla_lower")) %>%
mutate(uf_base_ascii = iconv(uf, from="UTF-8", to="ASCII//TRANSLIT")) %>%
mutate(uf_ascii = iconv(district_id, from="UTF-8", to="ASCII//TRANSLIT"),
erro = if_else(uf_ascii != uf_base_ascii, T, F)) %>%
mutate(district_id = ifelse(erro, uf, district_id)) %>%
select(-c(uf_ascii, uf, sigla.y ))
x <- face_valid %>%
filter(erro == 1)
x <- nrow(x)
print(paste("foram corrigidas", x, "linhas com UF erradas"))
face_valid1 <- face_valid %>%
select(-erro)
}
muda_nome_coluna <- function(df_face) {
if (sum(grepl("district_name", names(df_face))) == 0) {
df_face <- df_face %>%
rename(district_name = State) %>%
mutate(district_id = district_name)
}
if (sum(grepl("figure_id", names(df_face))) == 0) {
df_face <- df_face %>%
rename(figure_id = numero)
}
if (sum(grepl("party_id", names(df_face))) == 0) {
df_face <- df_face %>%
rename(party_id = sigla_partido,
party = nome_partido)
}
if (sum(grepl("office_title", names(df_face))) == 0) {
df_face <- df_face %>%
rename(office_title = title)
}
if (sum(grepl("figure_name", names(df_face))) == 0) {
df_face <- df_face %>%
rename(figure_name = nome_completo)
}
return(df_face)
}
load("C:/Users/jvoig/OneDrive/Documentos/facebook_election_files/Repositório de candidatos TSE/1009/tse_filtrado1009.Rdata")
setwd("C:\\Users\\jvoig\\OneDrive\\Documentos\\facebook_election_files\\10_09")
setwd("C:/Users/jvoig/OneDrive/Documentos/facebook_election_files/pós-entrega/")
list()
list.files()
fb_profiles <- fread("candidatos_finais_040918.csv")
library(dplyr)
library(janitor)
library(data.table)
setwd("C:/Users/jvoig/OneDrive/Documentos/facebook_election_files/pós-entrega/")
fb_profiles <- fread("candidatos_finais_040918.csv")
View(fb_profiles)
library(data.table)
library(dplyr)
library(janitor)
ultima_leva <- fread("candidatos_finais_040918.csv") %>%
filter(!is.na(ano_eleicao))
load("C:/Users/jvoig/OneDrive/Documentos/facebook_election_files/Repositório de candidatos TSE/0309/tse_filtrado0309.Rdata")
tse_filtrado <- processa_cand_tse(tse) %>%
clean_names() %>%
mutate(nome_ue = stringr::str_to_title(nm_ue)) %>%
mutate(nome_ue = gsub(" Do", " do", nome_ue)) %>%
mutate(nome_ue = gsub(" De", " de", nome_ue),
nome_ue = gsub("Distrito Federal", "Federal District", nome_ue),
nome_ue = str_trim(nome_ue)) %>%
filter(ds_cargo != "VICE-GOVERNADOR")
library(data.table)
library(dplyr)
library(janitor)
ultima_leva <- fread("candidatos_finais_040918.csv") %>%
filter(!is.na(ano_eleicao))
tse_filtrado <- processa_cand_tse(tse) %>%
clean_names() %>%
mutate(nome_ue = stringr::str_to_title(nm_ue)) %>%
mutate(nome_ue = gsub(" Do", " do", nome_ue)) %>%
mutate(nome_ue = gsub(" De", " de", nome_ue),
nome_ue = gsub("Distrito Federal", "Federal District", nome_ue),
nome_ue = str_trim(nome_ue)) %>%
filter(ds_cargo != "VICE-GOVERNADOR")
??str_trim"
??str_trim
library(stringr)
tse_filtrado <- processa_cand_tse(tse) %>%
clean_names() %>%
mutate(nome_ue = stringr::str_to_title(nm_ue)) %>%
mutate(nome_ue = gsub(" Do", " do", nome_ue)) %>%
mutate(nome_ue = gsub(" De", " de", nome_ue),
nome_ue = gsub("Distrito Federal", "Federal District", nome_ue),
nome_ue = str_trim(nome_ue)) %>%
filter(ds_cargo != "VICE-GOVERNADOR")
remove_dup <- function(tse) {
tse1 <- tse %>%
mutate(dup1 = duplicated(nr_cpf_candidato),
dup2 = duplicated(nr_cpf_candidato, fromLast=T),
dup_end = ifelse(dup1, T,
ifelse(dup2, T, F))) %>%
filter(!dup_end)
print(paste("foram removidas", nrow(tse) - nrow(tse1)))
return(tse1)
}
tse_unico <- remove_dup(tse_filtrado)
ocdid_brazil <- fread("ocdid_brazil.csv", encoding="UTF-8") %>%
mutate(State1 = iconv(State, from="UTF-8", to="ASCII//TRANSLIT"))
face_ultimo <- fread("entrega_0309.csv", encoding="UTF-8")
face_vice_pres <- fread("entrega_0309_vice_president.csv", encoding="UTF-8")
face_pres_sen_gov <- fread("face_full_so_far.csv", encoding="UTF-8") %>%
filter(office_title %in% c("Senador", "PRESIDENTE", "Governador do estado"))
sen_faltante <- fread("SENADORES_FALTANTES.csv",  encoding="UTF-8") %>%
mutate(district_name = district_id)
face_ultimo <- face_ultimo %>%
muda_nome_coluna() %>%
select(names(face_pres_sen_gov))
face_vice_pres <- face_vice_pres %>%
muda_nome_coluna() %>%
select(names(face_pres_sen_gov))
ultima_leva1 <- ultima_leva %>%
mutate(State = nome_ue,
numero = nr_candidato,
sigla_partido = sg_partido,
nome_partido = nm_partido,
office_title = stringr::str_to_title(ds_cargo),
nome_completo = nm_candidato,
nome_urna = nm_urna_candidato,
url = url1) %>%
muda_nome_coluna() %>%
mutate(office_title = gsub("Estadual", "do estado", office_title),
office_title = gsub("Distrital", "do estado", office_title),
office_title = gsub(" Federal", "", office_title)) %>%
left_join(ocdid_brazil, by=c("district_id" = "State1", "office_title" = "title")) %>%
select(names(face_pres_sen_gov))
face_todos <- bind_rows(face_ultimo, face_vice_pres,
face_pres_sen_gov, ultima_leva1, sen_faltante) %>%
mutate(district_id = iconv(district_id, from="UTF-8", to = "ASCII//TRANSLIT")) %>%
mutate(district_id = ifelse(grepl("BRASIL", district_id), "Brasil", district_id))
remove_dup_face <- function(face) {
face <- face %>%
mutate(id_nome_num_estado_cargo = paste(figure_name, figure_id, office_title, district_id, sep="_"),
dup1 = duplicated(id_nome_num_estado_cargo),
dup2 = duplicated(id_nome_num_estado_cargo, fromLast=T),
dup_end = ifelse(dup1, T,
ifelse(dup2, T, F)))
face1 <- face %>%
filter(!dup_end)
face2 <- face %>%
filter(dup_end)
print(paste("foram removidas", nrow(face) - nrow(face1)))
return(list(face1, face2))
}
face_remove <- remove_dup_face(face_todos)
face_unico <- face_remove[[1]] %>%
select(names(face_pres_sen_gov)) %>%
mutate(office_title = gsub("VICE-PRESIDENTE", "Vice-Presidente", office_title),
office_title = gsub("PRESIDENTE", "Presidente", office_title)) %>%
mutate_all(as.character)
face_todos <- bind_rows(face_ultimo, face_vice_pres,
face_pres_sen_gov, ultima_leva1, sen_faltante) %>%
mutate(district_id = iconv(district_id, from="UTF-8", to = "ASCII//TRANSLIT")) %>%
mutate(district_id = ifelse(grepl("BRASIL", district_id), "Brasil", district_id))
glimpse(face_ultimo)
glimpse(face_vice_pres)
glimpse(face_pres_sen_gov)
glimpse(ultima_leva1)
ultima_leva1 <- ultima_leva %>%
mutate(State = nome_ue,
numero = nr_candidato,
sigla_partido = sg_partido,
nome_partido = nm_partido,
office_title = stringr::str_to_title(ds_cargo),
nome_completo = nm_candidato,
nome_urna = nm_urna_candidato,
url = url1) %>%
muda_nome_coluna() %>%
mutate_all(as.character) %>%
mutate(office_title = gsub("Estadual", "do estado", office_title),
office_title = gsub("Distrital", "do estado", office_title),
office_title = gsub(" Federal", "", office_title)) %>%
left_join(ocdid_brazil, by=c("district_id" = "State1", "office_title" = "title")) %>%
select(names(face_pres_sen_gov))
face_todos <- bind_rows(face_ultimo, face_vice_pres,
face_pres_sen_gov, ultima_leva1, sen_faltante) %>%
mutate(district_id = iconv(district_id, from="UTF-8", to = "ASCII//TRANSLIT")) %>%
mutate(district_id = ifelse(grepl("BRASIL", district_id), "Brasil", district_id))
glimpse(sen_faltante)
sen_faltante <- fread("SENADORES_FALTANTES.csv",  encoding="UTF-8") %>%
mutate(district_name = district_id) %>%
mutate_all(as.character)
face_todos <- bind_rows(face_ultimo, face_vice_pres,
face_pres_sen_gov, ultima_leva1, sen_faltante) %>%
mutate(district_id = iconv(district_id, from="UTF-8", to = "ASCII//TRANSLIT")) %>%
mutate(district_id = ifelse(grepl("BRASIL", district_id), "Brasil", district_id))
remove_dup_face <- function(face) {
face <- face %>%
mutate(id_nome_num_estado_cargo = paste(figure_name, figure_id, office_title, district_id, sep="_"),
dup1 = duplicated(id_nome_num_estado_cargo),
dup2 = duplicated(id_nome_num_estado_cargo, fromLast=T),
dup_end = ifelse(dup1, T,
ifelse(dup2, T, F)))
face1 <- face %>%
filter(!dup_end)
face2 <- face %>%
filter(dup_end)
print(paste("foram removidas", nrow(face) - nrow(face1)))
return(list(face1, face2))
}
face_remove <- remove_dup_face(face_todos)
face_unico <- face_remove[[1]] %>%
select(names(face_pres_sen_gov)) %>%
mutate(office_title = gsub("VICE-PRESIDENTE", "Vice-Presidente", office_title),
office_title = gsub("PRESIDENTE", "Presidente", office_title)) %>%
mutate_all(as.character)
face_dup <- face_remove[[2]] %>%
select(names(face_pres_sen_gov)) %>%
mutate(office_title = gsub("VICE-PRESIDENTE", "Vice-Presidente", office_title),
office_title = gsub("PRESIDENTE", "Presidente", office_title)) %>%
mutate_all(as.character)
tse_unico <- tse_unico %>%
mutate(nome_cargo = stringr::str_to_title(ds_cargo),
nome_cargo = ifelse(grepl('Vice', nome_cargo), "Vice-Presidente", nome_cargo),
nome_cargo = gsub("Estadual", "do estado", nome_cargo),
nome_cargo = gsub("Distrital", "do estado", nome_cargo),
nome_cargo = gsub(" Federal", "", nome_cargo),
nome_cargo = gsub("Governador", "Governador do estado", nome_cargo)) %>%
mutate_all(as.character)
face_unico_validado <- face_unico %>%
inner_join(tse_unico, by = c("figure_id" = "nr_candidato",
"district_id" = "nome_ue",
"office_title" = "nome_cargo")) %>%
mutate(party = ifelse(is.na(party), nm_partido, party)) %>%
select(names(face_pres_sen_gov), nr_cpf_candidato) %>%
mutate(dup1 = duplicated(nr_cpf_candidato),
dup2 = duplicated(nr_cpf_candidato, fromLast=T),
dup_end = ifelse(dup1, T,
ifelse(dup2, T, F)))
face_unico_validado1 <- face_unico_validado %>%
filter(!dup_end)
face_unico_validado2 <- face_unico_validado %>%
filter(dup_end)
face_unico_validado3 <- face_unico_validado2 %>%
mutate(nr_cpf_candidato = ifelse(grepl("ALVARO FERREIRA", figure_name), "01389382885", nr_cpf_candidato ),
nr_cpf_candidato = ifelse(grepl("JOSE CARLOS DOS SANTOS", figure_name), "58942300804", nr_cpf_candidato )) %>%
mutate(nome_urn_igua1 = duplicated(paste(nr_cpf_candidato, nome_urna)),
nome_urn_igua2 = duplicated(paste(nr_cpf_candidato, nome_urna), fromLast = T),
nome_urn_igua_end = ifelse(nome_urn_igua1, T,
ifelse(nome_urn_igua2, T, F)))
face_unico_volta <- face_unico_validado3 %>%
filter((nome_urn_igua2 & nome_urn_igua_end) |
grepl("D'ARC", nome_urna)) %>%
select(names(face_unico_validado1))
face_unico_validado1 <- bind_rows(face_unico_validado1,
face_unico_volta)
face_dup_validado <- face_dup %>%
inner_join(tse_unico, by = c("figure_id" = "nr_candidato",
"district_id" = "nome_ue",
"office_title" = "nome_cargo")) %>%
select(names(face_pres_sen_gov), nr_cpf_candidato) %>%
mutate(dup1 = duplicated(nr_cpf_candidato),
dup2 = duplicated(nr_cpf_candidato, fromLast=T),
dup_end = ifelse(dup1, T,
ifelse(dup2, T, F)))
face_dup_validado %>%
summarise(num_cpf_unico = n_distinct(nr_cpf_candidato))
checagem <- tse_unico  %>%
anti_join(bind_rows(face_dup_validado, face_unico_validado1, face_unico_validado2), by = "nr_cpf_candidato")
dim(checagem)
face_entraga_0509 <- face_unico_validado1 %>%
remove_dup() %>%
select(names(face_unico_validado1)[-c(13, 14, 15)])
tse_unico %>%
summarise(n_distinct(nr_cpf_candidato))
face_entraga_0509 %>%
summarise(n_distinct(nr_cpf_candidato),
n())
tse_unico %>%
group_by(ds_cargo) %>%
summarise(n_distinct(nr_cpf_candidato))
tse_unico %>%
group_by(nome_cargo) %>%
summarise(n_distinct(nr_cpf_candidato))
face_entraga_0509 %>%
group_by(office_title) %>%
summarise(n_distinct(nr_cpf_candidato), n())
face_entraga_0509 %>%
group_by(office_title) %>%
summarise(n_distinct(nr_cpf_candidato), n()) %>%
adorn_total("row")
face_entraga_0509 %>%
group_by(office_title) %>%
summarise(n_distinct(nr_cpf_candidato), n()) %>%
adorn_totals("row")
face_entraga_0509 %>%
toJSON() %>%
write_lines(path="face_0905.json")
library(readr)
library(jsonlite)
library("rjson")
face_entraga_0509 %>%
toJSON() %>%
write_lines(path="face_0905.json")
write.table(face_entraga_0509, file="face_0905.csv",
sep=",", fileEncoding="UTF-8", row.names=F)
save(face_entraga_0509, file="face_0905.RData")
write.table(face_entraga_0509, file="face_0905.csv",
sep=",", fileEncoding="UTF-8", row.names=F)
face_entraga_0509 %>%
toJSON() %>%
write_lines(path="face_0905.json")
library(rjson)
library(jsonlite)
library(data.table)
library(dplyr)
library(janitor)
library(stringr)
